# This workflow builds and uploads package.

name: Run build
on:
  workflow_call:
    inputs:
      platforms:
        description: "Target os to build package on."
        default: "[ 'ubuntu-latest', 'windows-latest', 'macOS-latest' ]"
        required: false
        type: string
      python-version:
        description: "Python version used for build."
        default: "3.13"
        required: false
        type: string

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(inputs.platforms) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install the latest version of uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Get package tag
        id: package-tag
        run: echo "TAG=v$(uvx --from toml-cli toml get --toml-path=pyproject.toml project.version)" >> $GITHUB_OUTPUT

      - name: Get GITHUB tag
        id: git-tag
        run: echo "TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Validate tag
        run: |
          packageTag=${{ steps.package-tag.outputs.TAG }}
          gitTag=${{ steps.git-tag.outputs.TAG }}
          echo PACKAGE $packageTag
          echo GIT $gitTag
          python -c "import sys; eq='packageTag'!='$gitTag'; sys.exit(int(eq))"
          exit $?

      - name: Install dependencies
        run: uv venv

      - name: Build with uv
        run: uv build

      - name: Create package
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          allowUpdates: true
          removeArtifacts: false
          replaceArtifacts: true
          body: "Automatically generated release."
          tag: ${{ steps.package-tag.outputs.TAG }}








